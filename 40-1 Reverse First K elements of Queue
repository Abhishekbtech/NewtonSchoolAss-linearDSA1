static Queue<Integer> ReverseK(Queue<Integer> queue, int k) { 
        //enter your code here
        if (queue.isEmpty() || k <= 0 || k > queue.size()) {
            return queue;
        }

        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < k; i++) {
            stack.push(queue.poll());
        }
        while (!stack.isEmpty()) {
            queue.add(stack.pop());
        }
        for (int i = 0; i < queue.size() - k; i++) {
            queue.add(queue.poll());
        }

        return queue;
    }
